name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # OIDC for npm trusted publishing
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      
      - name: Get version from tag
        id: version
        run: |
          # Get version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Get package name from package.json
          PACKAGE_NAME=$(jq -r '.name' package.json)
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          
          # Verify package.json version matches tag
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          if [ "$PACKAGE_VERSION" != "$VERSION" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) doesn't match tag version ($VERSION)"
            exit 1
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install latest npm
        run: |
          echo "Current npm version: $(npm -v)"
          npm install -g npm@latest
          echo "Updated npm version: $(npm -v)"
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build
        run: pnpm run build
      
      - name: Run tests
        run: pnpm test
      
      - name: Publish to npm with provenance
        run: npm publish --provenance --access public
      
      - name: Create GitHub Release
        run: |
          gh release create "$GITHUB_REF_NAME" \
            --title "$GITHUB_REF_NAME" \
            --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}